/*
 * Copyright 2016-2019 The Reaktivity Project
 *
 * The Reaktivity Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
scope internal
{
    scope cache
    {
        struct KafkaCacheBeginEx extends core::stream::Extension
        {
            string16 topic;
            int32 partitionId;
            int64 progressOffset;
        }

        struct KafkaCacheFlushEx extends core::stream::Extension
        {
            int64 progressOffset;
        }

        struct KafkaCacheKey
        {
            int32 length;
            octets[length] value = null;
        }

        struct KafkaCacheHeader
        {
            string16 name;
            int32 valueLen;
            octets[valueLen] value = null;
        }

        struct KafkaCacheEntry
        {
          int64 offset;
          int64 timestamp;
          KafkaCacheKey key;
          KafkaCacheHeader[] headers;
          int32 valueLen;
          octets[valueLen] value = null;
        }
    }
}